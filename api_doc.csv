category,api_name,method,route,description,requires_token,route_parameters,post_body,post_example,response_example
1,Sign up,POST,/handle_signup,Post users' credential data to sign up and login afterwards.,FALSE,N/A,"email   : string, not null
username: string, not null
password: string, not null (Password must meet security requirements, do not hash)","{
    'email': 'chantaiman@gmail.com',
    'username': 'chan_taiman',
    'password': '30624700'
}","// Status Code: 201, Created
// Occurs when successfully sign.
{
    'message': 'Sign up successful',
    'data': {
        'email': 'chantaiman@gmail.com',
        'username': 'chan_taiman',
        'token': '9p843chty9432tf8474983ru8owyt84525y53'
    }
}

// Status Code: 400, Bad Request
// Occurs when missing email or password
{
    'error': 'Missing email or password.'
}

// Status Code: 409, Conflict
// Occurs when the email has been used.
{
    'error': 'Email is already in use'
}

// Status Code: 422, Unprocessable Entity
// Occurs when email or password is invalid.
// message.email.valid or message.password.valid can be true, then error is empty string
{
    'error': 'Invalid email or password format',
    ""message"": {
        ""email"": {
            ""valid"": false,
            ""error"": ""Must be an email format""
        },
        ""password"": {
            ""valid"": false,
            ""error"": ""Password must be at least 8 characters, include an uppercase letter, a number, and a special character""
        }
    }
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
1,Login,POST,/handle_login,Post users' credential data to login.,FALSE,N/A,"email   : string
password: string (Password must meet security requirements, do not hash)","{
    'email': 'chantaiman@gmail.com',
    'password': '30624700'
}","// Status Code: 200, OK
// Occurs when successfully login.
{
    'message': 'Login successful',
    'data': {
        'email': 'chantaiman@gmail.com',
        'token': '9p843chty9432tf8474983ru8owyt84525y53'
    }
}

// Status Code: 400, Bad Request
// Occurs when missing login information.
// It should not be used but written just in case,
// checking this situation in the frontend.
{
    'error': 'Missing email or password'
}

// Status Code: 401, Unauthorized
// Occurs when email does not exist or password is not correct.
{
    'error': 'Invalid credentials'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
1,Log out,POST,/handle_logout,Let users to log out.,TRUE,N/A,logout_all: boolean (Set it as false at this stage),"// Set it as false by default
{
    'logout_all': false
}","// Status Code: 200, OK
// Occurs when successfully log out.
// Frontend: normally log out.
{
    'message': 'Log out successful',
}

// Status Code: 400, Bad Request
// Occurs when missing token.
// Frontend: directly log out.
{
    'error': 'Missing token'
}

// Status Code: 401, Unauthorized
// Occurs when token is invalid or expired.
// Frontend: directly log out.
{
    'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
1,Update email,PATCH,/handle_update_email,"Allows a user to update their email, requiring token.",TRUE,N/A,"email: string, not null (must be email format)","{
    ""email"": ""newemail@example.com""
}","// Status Code: 200, OK
// Occurs when the email is updated successfully.
{
    'message': 'Email updated successfully',
    'data':  {
           'email':  'newemail@example.com'
    }
}

// Status Code: 400, Bad Request
// Occurs when missing current email, or new email.
{
    'error': 'Missing email.'
}

// Status Code: 401, Unauthorized
// Occurs when unauthorized, token is invalid.
{
    'error': 'Invalid or expired token'
}

// Status Code: 409, Conflict
// Occurs when the new email is already in use.
{
    'error': 'Email is already in use.'
}

// Status Code: 422, Unprocessable Entity
// Occurs when the new email format is invalid.
{
    'error': 'Invalid email format',
    'message': {
        ""email"": {
            ""valid"": false,
            ""error"": ""Must be an email format""
        }
    }
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
1,Update password,PATCH,/handle_update_password,Allows a user to update their password. Requires current password and new password.,TRUE,N/A,"current_password: string, not null
new_password    : string, not null (Password must meet security requirements, do not hash)","{
    'current_password': '30624700',
    'new_password': '30624770'
}","// Status Code: 200, OK
// Occurs when the password is updated successfully.
{
    'message': 'Password updated successfully'
}

// Status Code: 400, Bad Request
// Occurs when either the current password or the new password is missing. Should not occur in normal situations, handle just in case.
{
    'error': 'Missing current or new password.'
}

// Status Code: 401, Unauthorized
// Occurs when the current password is incorrect or the user is not authenticated.
{
    'error': 'Incorrect current password or unauthorized user.'
}

// Status Code: 422, Unprocessable Entity
// Occurs when the new password does not meet security requirements.
{
    'error': 'Invalid password format',
    ""message"": {
        ""password"": {
            ""valid"": false,
            ""error"": ""Password must be at least 8 characters, include an uppercase letter, a number, and a special character""
        }
    }
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
1,Update user name,PATCH,/handle_update_username,Allows a user to update their username.,TRUE,N/A,"username: string, not null","{
    'username': 'chantaiman'
}","// Status Code: 200, OK
// Occurs when the username is updated successfully.
{
    'message': 'Username updated successfully',
    'data':  {
            'username': 'chantaiman'
    }
}

// Status Code: 400, Bad Request
// Occurs when missing new username.
{
    'error': 'Missing new username.'
}

// Status Code: 401, Unauthorized
// Occurs when the password is incorrect or the user is not authorized.
{
    'error': 'Invalid or expired token'
}

// Status Code: 422, Unprocessable Entity
// Occurs when the new username format is invalid.
{
    'error': 'Invalid username format',
    'message': {
        'username': false,
	'error': 'Username must contain no more than 31 characters'
    }
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
1,Delete account,DELETE,/handle_delete_account,"Allows a user to delete their account. Requires current password for verification. Once deleted, the account cannot be recovered.",TRUE,N/A,"password: string, not null","{
    'password': 'password123'
}","// Status Code: 200, OK
// Occurs when the account is successfully deleted.
{
    'message': 'Account deleted successfully'
}

// Status Code: 400, Bad Request
// Occurs when the password is missing.
{
    'error': 'Missing password.'
}

// Status Code: 401, Unauthorized
// Occurs when the token is invalid or missing.
{
    'error': 'Invalid or expired token.'
}

// Status Code: 403, Forbidden
// Occurs when the password is incorrect.
{
    'error': 'Incorrect password.'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
2,Get suburbs,GET,/suburbs,"Retrieve all suburb details including suburb name, postcode, latitude, longitude, and state code.",FALSE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the suburbs are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'id': 1,
      'suburb_name': 'Suburb 1',
      'postcode': 4000,
      'latitude': -33.8688,
      'longitude': 151.2093,
      'state_code': 'QLD'
    },
    {
      'id': 2,
      'suburb_name': 'Suburb 2',
      'postcode': 5000,
      'latitude': -34.9285,
      'longitude': 138.6007,
      'state_code': 'QLD'
    }
  ]
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
3,Get weathers,GET,/weathers,"Retrieve all weather information including weather category, weather description, and weather code.",FALSE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the weather data is successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'id': 1,
      'category': 'Rainy',
      'weather': 'Light Rain',
      'weather_code': 200
    },
    {
      'id': 2,
      'category': 'Sunny',
      'weather': 'Clear Sky',
      'weather_code': 100
    }
  ]
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}"
4,Get user saved suburbs,GET,/user_saved_suburb,"Retrieve the list of suburbs saved by the user, including details like suburb name, post code, latitude, longitude, and state code.",TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's saved suburbs are successfully retrieved.
{
  'message': 'Data retrieved successfully',
  'data': [
    {
      'id': 1,
      'suburb_id': 1,
      'label': 'Home',
      'suburb_name': 'Suburb 1',
      'post_code': 4000,
      'latitude': -33.8688,
      'longitude': 151.2093,
      'state_code': 'QLD'
    },
    {
      'id': 14,
      'suburb_id': 2,
      'label': 'Work',
      'suburb_name': 'Suburb 2',
      'post_code': 4067,
      'latitude': -37.8136,
      'longitude': 144.9631,
      'state_code': 'QLD'
    }
  ]
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
4,Add user saved suburb,POST,/user_saved_suburb,"Add a suburb to the user's saved suburbs with suburb details such as label, suburb name, post code, and state code.",TRUE,N/A,"label	    : string, not null
suburb_id: int, not null","{
  'label': 'Home',
  'suburb_id': 14
}","// Status Code: 201 Created
// Occurs when the suburb is successfully saved.
{
  'message': 'Data created successfully',
  'data': {
         'id': 1,
         'suburb_id': 14,
         'label': 'Home',
         'suburb_name': 'Suburb 14',
         'post_code': 4000,
         'latitude': -33.8688,
         'longitude': 151.2093,
         'state_code': 'QLD'
  }
}

// Status Code: 400 Bad Request
// Occurs when required fields are missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409, Conflict
// Occurs when the user has already saved this suburb.
{
    'error': 'The label has been used by user'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the suburb_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
4,Update user saved suburb,PUT,/user_saved_suburb,"Update the label of a saved suburb, with the suburb ID specified in the route.",TRUE,N/A,"id       : int, not null
suburb_id: int, not null
label    : string, not null","{
  'id': 14,
  'suburb_id': 12,
  'label': 'New Label'
}","// Status Code: 200 OK
// Occurs when the suburb's label is successfully updated.
{
  'message': 'Data updated successfully',
  'data': {
        'id': 14,
        'suburb_id': 12,
        'label': 'New Label',
        'suburb_name': 'Suburb 12',
        'post_code': 4077,
        'latitude': -33.8688,
        'longitude': 151.2093,
        'state_code': 'QLD'
   }
}

// Status Code: 400 Bad Request
// Occurs when the label is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409, Conflict
// Occurs when the user has already saved this suburb.
{
    'error': 'The label has been used by user'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id or suburb_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
4,Delete a saved suburb,DELETE,/user_saved_suburb,Delete a saved suburb by providing the saved ID.,TRUE,N/A,"id: int, not null",{'id': 14},"// Status Code: 200 OK
// Occurs when the suburb is successfully deleted.
{
  'message': 'Data deleted successfully'
  'data': {
    'id': 14
  }
}

// Status Code: 400 Bad Request
// Occurs when the id is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
4,Get user alert suburbs,GET,/user_alert_suburb,"Retrieve the list of suburbs for which the user receives alerts, including suburb details and alert time information.",TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's alert suburbs are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'id': 101,
      'suburb_id': 1,
      'suburb_name': 'Brisbane City',
      'post_code': 4000,
      'latitude': -33.8688,
      'longitude': 151.2093,
      'state_code': 'QLD'
    },
    {
      'id': 102,
      'suburb_id': 2,
      'suburb_name': 'St. Lucia',
      'post_code': 4067,
      'latitude': -34.9285,
      'longitude': 138.6007,
      'state_code': 'QLD'
    }
  ]
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
4,Add user alert suburb,POST,/user_alert_suburb,Add a suburb to the user's alert suburbs.,TRUE,N/A,"suburb_id: int, not null","{
  'suburb_id': 3
}","// Status Code: 201 Created
// Occurs when the suburb is successfully added to alert list.
{
  'message': 'Data created Successfully',
  'data': {
    'id': 103,
    'suburb_id': 3,
    'suburb_name': 'Woolloongabba',
    'post_code': 4102,
    'latitude': -31.9505,
    'longitude': 115.8605,
    'state_code': 'QLD'
  }
}

// Status Code: 400 Bad Request
// Occurs when required fields like suburb_id is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409 Conflict
// Occurs when the user has already saved this suburb.
{
  'error': 'User has set this alert suburb'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the suburb_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
4,Update user alert suburb,PUT,/user_alert_suburb,Update the suburb for which the user receives alerts.,TRUE,N/A,"id       : int, not null
suburb_id: int, not null","{
  'id': 104,
  'suburb_id': 4
}","// Status Code: 200 OK
// Occurs when the alert suburb is successfully updated.
{
  'message': 'Data updated Successfully',
  'data': {
    'id': 104,
    'suburb_id': 4,
    'suburb_name': 'Suburb 4',
    'post_code': 7000,
    'latitude': -42.8821,
    'longitude': 147.3272,
    'state_code': 'QLD'
  }
}

// Status Code: 400 Bad Request
// Occurs when id or suburb_id is missing in the request body.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409 Conflict
// Occurs when the user has already saved this suburb.
{
  'error': 'User has set this alert suburb'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id or suburb_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
4,Delete user alert suburb,DELETE,/user_alert_suburb,Delete a suburb from the user's alert suburbs.,TRUE,N/A,"id: int, not null","{
  'id': 104
}","// Status Code: 200 OK
// Occurs when the alert suburb is successfully deleted.
{
  'message': 'Data deleted Successfully',
  'data': {
    'id': 104
  }
}

// Status Code: 400 Bad Request
// Occurs when suburb ID or alert time ID is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
4,Get user alert times,GET,/user_alert_time,"Retrieve all alert times for the user, including all alert time columns.",TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's alert times are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'id': 101,
      'start_time': '08:00:00',
      'end_time': '12:00:00',
      'is_active': true
    },
    {
      'id': 102,
      'start_time': '13:00:00',
      'end_time': '18:00:00',
      'is_active': false
    }
  ]
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}
"
4,Add user alert time,POST,/user_alert_time,"Add a new alert time for the user, user_id is identified through the token.",TRUE,N/A,"start_time: string, not null, 'HH:MM:SS'
end_time  : string, not null, 'HH:MM:SS'
is_active : bool, not null
Constraint: start_time < end_time","{
  'start_time': '09:00:00',
  'end_time': '13:00:00',
  'is_active': true
}","// Status Code: 201 Created
// Occurs when the alert time is successfully created.
{
  'message': 'Data created Successfully',
  'data': {
    'id': 103,
    'start_time': '09:00:00',
    'end_time': '13:00:00',
    'is_active': true
  }
}

// Status Code: 400 Bad Request
// Occurs when required fields like start_time or end_time are missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409, Conflict
// Occurs when the user has already saved an alert time with the same time range.
{
    'error': 'User has already saved an alert time for this time range'
}

// Status Code: 422 Unprocessable Entity
// Occurs when start_time is later than end_time, or data is wrong format
{
  ""error"": ""Invalid time range: start_time cannot be later than end_time""
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
4,Update user alert time,PUT,/user_alert_time,"Update an existing alert time, identified by alert_time_id.",TRUE,N/A,"id        : int, not null
start_time: string, not null, 'HH:MM:SS'
end_time  : string, not null, 'HH:MM:SS'
is_active : bool, not null
Constraint: start_time < end_time","{
  'id': 103,
  'start_time': '10:00:00',
  'end_time': '14:00:00',
  'is_active': false
}","// Status Code: 200 OK
// Occurs when the alert time is successfully updated.
{
  'message': 'Data updated Successfully',
  'data': {
    'id': 103,
    'start_time': '10:00:00',
    'end_time': '14:00:00',
    'is_active': false
  }
}

// Status Code: 400 Bad Request
// Occurs when required fields like alert_time_id, start_time, or end_time are missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409, Conflict
// Occurs when the user has already saved an alert time with the same time range.
{
    'error': 'User has already saved an alert time for this time range'
}

// Status Code: 422 Unprocessable Entity
// Occurs when start_time is later than end_time, or id not exist, or data is wrong format
{
  ""error"": ""Invalid time range: start_time cannot be later than end_time, or The record with the corresponding foreign key does not exist""
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
4,Delete user alert time,DELETE,/user_alert_time,"Delete an existing alert time, requires alert_time_id.",TRUE,N/A,"id: int, not null",{'id': 103},"// Status Code: 200 OK
// Occurs when the alert time is successfully deleted.
{
  'message': 'Data deleted Successfully',
  'data': {
    'id': 103
  }
}

// Status Code: 400 Bad Request
// Occurs when alert_time_id is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
    'error': 'An internal server error occurred. Please try again later.'
}"
5,Get user alert weathers,GET,/user_alert_weather,"Retrieve all weather alerts set by the user, including category, weather description, and weather code.",TRUE,N/A,N/A,{},"""// Status Code: 200 OK
// Occurs when the user's weather alerts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'id': 1,
      'weather_id': 1,
      'category': 'Rainy',
      'weather': 'Light Rain',
      'weather_code': 200
    },
    {
      'id': 2,
      'weather_id': 2,
      'category': 'Sunny',
      'weather': 'Clear Sky',
      'weather_code': 100
    }
  ]
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"""
5,Add user alert weather,POST,/user_alert_weather,"Add a weather condition for which the user wants to receive alerts, identified by weather_id.",TRUE,N/A,"weather_id: int, not null","{
  'weather_id': 3
}","// Status Code: 201 Created
// Occurs when the weather alert is successfully created.
{
  'message': 'Data created Successfully',
  'data': {
    'id': 4,
    'weather_id': 3,
    'category': 'Stormy',
    'weather': 'Thunderstorm',
    'weather_code': 300
  }
}

// Status Code: 400 Bad Request
// Occurs when the weather_id is missing in the request body.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 409 Conflict
// Occurs when the user has already saved this weather alert.
{
  'error': 'User has already saved this weather alert'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the weather_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}"
5,Update user alert weather,PUT,/user_alert_weather,"Update the weather condition for which the user wants to receive alerts, identified by weather_id.",TRUE,N/A,"id        : int, not null
weather_id: int, null","{
  'id': 4,
  'weather_id': 4
}","// Status Code: 200 OK
// Occurs when the weather alert is successfully updated.
{
  'message': 'Data updated Successfully',
  'data': {
    'id': 4,
    'weather_id': 4,
    'category': 'Cloudy',
    'weather': 'Overcast',
    'weather_code': 400
  }
}

// Status Code: 400 Bad Request
// Occurs when the weather_id is missing in the request body.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id or weather_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}"
5,Delete user alert weather,DELETE,/user_alert_weather,"Delete a weather alert for the user, identified by the alert's unique ID.",TRUE,N/A,"id: int, not null",{'id': 4},"// Status Code: 200 OK
// Occurs when the weather alert is successfully deleted.
{
  'message': 'Data deleted Successfully',
  'data': {
    'id': 4
  }
}

// Status Code: 400 Bad Request
// Occurs when the alert ID is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
6,Create post,POST,/posts,"Create a new post with latitude, longitude, and weather details. Suburb information will be fetched from a third-party geocoding API.",TRUE,N/A,"latitude  : float, not null
longitude : float, not null
weather_id: int, not null
comment   : string, optional","{
  'latitude': -33.8688,
  'longitude': 151.2093,
  'weather_id': 1,
  'comment': 'It iss a sunny day!'
}","// Status Code: 201 Created
// Occurs when the post is successfully created.
{
  'message': 'Data created Successfully',
  'data': {
    'id': 1
    'latitude': -33.8688,
    'longitude': 151.2093,
    'suburb_id': 2,
    'suburb_name': 'Brisbane City',
    'postcode': 4000,
    'state_code': 'QLD',
    'weather_id': 1,
    'weather': 'Sunny',
    'weather_code': 100,
    'created_at': '2024-09-16T10:00:00Z',
    'likes': 0,
    'views': 0,
    'reports': 0,
    'is_active': true,
    'comment': 'It iss a sunny day!'
  }
}

// Status Code: 400 Bad Request
// Occurs when required fields like latitude, longitude, or weather_id are missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the weather_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}"
6,Delete post,DELETE,/posts,"Delete an existing post created by the user, identified by post_id.",TRUE,N/A,"id: int, not null",{id: 1},"// Status Code: 200 OK
// Occurs when the post is successfully deleted.
{
  'message': 'Data deleted Successfully',
  'data': {
    'id': 1
  }
}

// Status Code: 400 Bad Request
// Occurs when post_id is missing.
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
// Occurs when the user token is invalid or missing.
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
// Occurs when there is a server-side error, such as a database connection failure.
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
6,Get user posts,GET,/posts,Retrieve all posts created by the user.,TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's posts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'post_id': 1,
      'latitude': -33.8688,
      'longitude': 151.2093,
      'suburb_id': 101,
      'suburb_name': 'Brisbane City',
      'weather_id': 1,
      'weather_category': 'Sunny',
      'weather': 'Clear Sky',
      'weather_code': 100,
      'created_at': '2024-09-16T10:00:00Z',
      'likes': 10,
      'views': 100,
      'reports': 1,
      'is_active': true,
      'comment': 'It is a sunny day!'
    },
    {
      'post_id': 2,
      'latitude': -34.9285,
      'longitude': 138.6007,
      'suburb_id': 102,
      'suburb_name': 'St. Lucia',
      'weather_id': 2,
      'weather_category': 'Rainy',
      'weather': 'Light Rain',
      'weather_code': 200,
      'created_at': '2024-09-16T11:00:00Z',
      'likes': 5,
      'views': 50,
      'reports': 0,
      'is_active': true,
      'comment': 'It is raining heavily!'
    }
  ]
}

// Status Code: 400 Bad Request
{
  'error': 'Invalid request. Check the input parameters.'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}"
6,Get viewed posts,GET,/posts/view,Retrieve all posts viewed by the user,TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's viewed posts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'post_id': 1,
      'latitude': -33.8688,
      'longitude': 151.2093,
      'suburb_id': 101,
      'suburb_name': 'Brisbane City',
      'weather_id': 1,
      'weather_category': 'Sunny',
      'weather': 'Clear Sky',
      'weather_code': 100,
      'created_at': '2024-09-16T10:00:00Z',
      'likes': 10,
      'views': 100,
      'reports': 1,
      'is_active': false,
      'comment': 'It is a sunny day!'
    }
  ]
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
6,Get liked posts,GET,/posts/like,"Retrieve all posts liked by the user, stored in user_like_post table.",TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's liked posts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'post_id': 2,
      'latitude': -34.9285,
      'longitude': 138.6007,
      'suburb_id': 102,
      'suburb_name': 'St. Lucia',
      'weather_id': 2,
      'weather_category': 'Rainy',
      'weather': 'Light Rain',
      'weather_code': 200,
      'created_at': '2024-09-16T11:00:00Z',
      'likes': 5,
      'views': 50,
      'reports': 0,
      'is_active': true,
      'comment': 'It is raining heavily!'
    }
  ]
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
6,Get reported posts,GET,/posts/report,"Retrieve all posts reported by the user, stored in user_report_post table.",TRUE,N/A,N/A,{},"// Status Code: 200 OK
// Occurs when the user's reported posts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'post_id': 3,
      'report_comment': 'This post is inappropriate',
      'created_at': '2024-09-16T12:00:00Z'
      'latitude': -33.8688,
      'longitude': 151.2093,
      'suburb_id': '101,
      'suburb_name': 'Brisbane City',
      'weather_id': 1,
      'weather_category': 'Sunny'
      'weather': 'Clear Sky',
      'weather_code': 100,
      'created_at': '2024-09-16T10:00:00Z',
      'likes': 10,
      'views': 100,
      'reports': 1,
      'is_active': true,
      'comment': 'It is a sunny day!'
    }
  ]
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}"
6,Get filtered posts,GET,/get_posts,Retrieve filtered posts using URL parameters.,FALSE,"URL Query Parameters: ?para1=2&para2=35
id        : int
latitude  : float
longitude : float
suburb_id : int
weather_id: int
likes     : return records that greater than or equal to
views     : return records that greater than or equal to
reports   : return records that greater than or equal to
is_active : true / false
limit     : optional, default 50

Constraint: latitude and longitude can only be both inclusive or not exclusive.",N/A,{},"// Status Code: 200 OK
// Occurs when the filtered posts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'post_id': 1,
      'latitude': -33.8688,
      'longitude': 151.2093,
      'suburb_id': 101,
      'suburb_name': 'Brisbane City',
      'weather_id': 1,
      'weather_category': 'Sunny',
      'weather': 'Clear Sky',
      'weather_code': 100,
      'created_at': '2024-09-16T10:00:00Z',
      'likes': 10,
      'views': 100,
      'reports': 1,
      'is_active': true,
      'comment': 'It is a sunny day!'
    }
  ]
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the one of ids does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}"
6,Check if user liked post,GET,/posts/like/{post_id},"Check if the user has liked a specific post, identified by post_id.",TRUE,"post_id: int, not null",N/A,{},"// Status Code: 200 OK
// Occurs when the post like status is successfully retrieved.
{
  'post_id': 1,
  'liked': true
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 404 Not found
// Occurs when the post_id is not found
{
    'error': 'Record is not found'
}

// Status Code: 422 Unprocessable Entity
// Occurs when data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}"
6,Toggle post like,POST,/posts/like,Toggle the like status for a specific post,TRUE,N/A,"post_id: int, not null",{'post_id': 1},"// Status Code: 200 OK
// Occurs when the like status for the post is successfully updated.
{
  'post_id': 1,
  'liked': true
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the post_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}
"
6,Report post,POST,/posts/report,"Report a post identified by post_id, providing a comment. The created_at will be handled by the database.",TRUE,N/A,"post_id       : int, not null
report_comment: text, not null","{
  'post_id': 4,
  'report_comment': 'This post contains offensive content'
}","


// Status Code: 200 OK
// Occurs when the user's reported posts are successfully retrieved.
{
  'message': 'Data retrieved Successfully',
  'data': [
    {
      'post_id': 3,
      'report_comment': 'This post is inappropriate',
      'created_at': '2024-09-16T12:00:00Z'
      'latitude': -33.8688,
      'longitude': 151.2093,
      'suburb_id': '101,
      'suburb_name': 'Brisbane City',
      'weather_id': 1,
      'weather_category': 'Sunny'
      'weather': 'Clear Sky',
      'weather_code': 100,
      'created_at': '2024-09-16T10:00:00Z',
      'likes': 10,
      'views': 100,
      'reports': 1,
      'is_active': true,
      'comment': 'It is a sunny day!'
    }
  ]
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}

// Status Code: 201 Created
// Occurs when the post is successfully reported.
{
  'message': 'Post reported Successfully',
  'data': {
      'post_id': 4,
      'report_comment': 'This post contains offensive content',
      'created_at': '2024-09-16T12:00:00Z'
      'latitude': -33.8688,
      'longitude': 151.2093,
      'suburb_id': '101,
      'suburb_name': 'Brisbane City',
      'weather_id': 1,
      'weather_category': 'Sunny'
      'weather': 'Clear Sky',
      'weather_code': 100,
      'created_at': '2024-09-16T10:00:00Z',
      'likes': 10,
      'views': 100,
      'reports': 1,
      'is_active': true,
      'comment': 'It is a sunny day!'
  }
}

// Status Code: 400 Bad Request
{
  'error': 'Missing (part of) required data'
}

// Status Code: 401 Unauthorized
{
  'error': 'Invalid or expired token'
}

// Status Code: 422 Unprocessable Entity
// Occurs when the post_id does not exist, or data is wrong format
{
    'error': 'The record with the corresponding foreign key does not exist'
}

// Status Code: 500 Internal Server Error
{
  'error': 'An internal server error occurred. Please try again later.'
}"